From 5b45d07be5f0496a0b7f8b0e1a9593233e283a47 Mon Sep 17 00:00:00 2001
From: Sunwook Eom <sunwook5492@gmail.com>
Date: Sun, 8 Nov 2020 21:24:47 +0900
Subject: [PATCH] "Tutorial 03 - Hacky Hello World" is done !

Add print function to see the log.

$ make qemu:
[0] Hello This is eom

Kernel Panic: Kernel init done. So kill myself!!!

Signed-off-by: Sunwook Eom <sunwook5492@gmail.com>
---
 nook_os/Makefile                       |  4 ++--
 nook_os/src/bsp/raspberrypi.rs         |  2 +-
 nook_os/src/bsp/raspberrypi/console.rs | 20 ++++++++++++++++++++
 nook_os/src/console.rs                 |  4 ++++
 nook_os/src/main.rs                    |  7 ++++++-
 nook_os/src/panic_wait.rs              | 10 ++++++++--
 nook_os/src/print.rs                   | 23 +++++++++++++++++++++++
 7 files changed, 64 insertions(+), 6 deletions(-)
 create mode 100644 nook_os/src/bsp/raspberrypi/console.rs
 create mode 100644 nook_os/src/console.rs
 create mode 100644 nook_os/src/print.rs

diff --git a/nook_os/Makefile b/nook_os/Makefile
index 724f4b9..397fdb2 100644
--- a/nook_os/Makefile
+++ b/nook_os/Makefile
@@ -7,7 +7,7 @@ ifeq ($(BSP),rpi3)
     KERNEL_BIN        = kernel8.img
     QEMU_BINARY       = qemu-system-aarch64
     QEMU_MACHINE_TYPE = raspi3
-    QEMU_RELEASE_ARGS = -d in_asm -display none
+    QEMU_RELEASE_ARGS = -serial stdio -display none
     LINKER_FILE       = src/bsp/raspberrypi/link.ld
     RUSTC_MISC_ARGS   = -C target-cpu=cortex-a53
 else ifeq ($(BSP),rpi4)
@@ -15,7 +15,7 @@ else ifeq ($(BSP),rpi4)
     KERNEL_BIN        = kernel8.img
     QEMU_BINARY       = qemu-system-aarch64
     QEMU_MACHINE_TYPE =
-    QEMU_RELEASE_ARGS = -d in_asm -display none
+    QEMU_RELEASE_ARGS = -serial stdio -display none
     LINKER_FILE       = src/bsp/raspberrypi/link.ld
     RUSTC_MISC_ARGS   = -C target-cpu=cortex-a72
 endif
diff --git a/nook_os/src/bsp/raspberrypi.rs b/nook_os/src/bsp/raspberrypi.rs
index c2b9d7f..5b9849f 100644
--- a/nook_os/src/bsp/raspberrypi.rs
+++ b/nook_os/src/bsp/raspberrypi.rs
@@ -1 +1 @@
-// Coming soon
+pub mod console;
diff --git a/nook_os/src/bsp/raspberrypi/console.rs b/nook_os/src/bsp/raspberrypi/console.rs
new file mode 100644
index 0000000..ec29fd5
--- /dev/null
+++ b/nook_os/src/bsp/raspberrypi/console.rs
@@ -0,0 +1,20 @@
+use core::fmt;
+use crate::console;
+
+struct QemuOutput;
+
+impl fmt::Write for QemuOutput{
+    fn write_str(&mut self, s: &str) -> fmt::Result {
+        for c in s.chars() {
+            unsafe {
+                core::ptr::write_volatile(0x3F20_1000 as *mut u8, c as u8);
+            }
+        }
+
+        Ok(())
+    }
+}
+
+pub fn console() -> impl console::interface::Write {
+    QemuOutput
+}
diff --git a/nook_os/src/console.rs b/nook_os/src/console.rs
new file mode 100644
index 0000000..ec939dd
--- /dev/null
+++ b/nook_os/src/console.rs
@@ -0,0 +1,4 @@
+pub mod interface {
+
+    pub use core::fmt::Write;
+}
diff --git a/nook_os/src/main.rs b/nook_os/src/main.rs
index 8a4ed24..e1176dc 100644
--- a/nook_os/src/main.rs
+++ b/nook_os/src/main.rs
@@ -2,6 +2,8 @@
 
 #![feature(asm)]
 #![feature(global_asm)]
+#![feature(panic_info_message)]
+#![feature(format_args_nl)]
 #![no_main]
 #![no_std]
 
@@ -10,6 +12,8 @@ mod cpu;
 mod memory;
 mod panic_wait;
 mod runtime_init;
+mod console;
+mod print;
 
 /// Early init code.
 ///
@@ -17,5 +21,6 @@ mod runtime_init;
 ///
 /// - Only a single core must be active and running this function.
 unsafe fn kernel_init() -> ! {
-    panic!()
+    println!("[0] Hello This is eom");
+    panic!("Kernel init is done.. So kill myself!!!");
 }
diff --git a/nook_os/src/panic_wait.rs b/nook_os/src/panic_wait.rs
index c297b7a..cbb596c 100644
--- a/nook_os/src/panic_wait.rs
+++ b/nook_os/src/panic_wait.rs
@@ -1,7 +1,13 @@
-use crate::cpu;
+use crate::{cpu, println};
 use core::panic::PanicInfo;
 
 #[panic_handler]
-fn panic(_info: &PanicInfo) -> ! {
+fn panic(info: &PanicInfo) -> ! {
+    if let Some(m) = info.message() {
+        println!("\nKernel Panic: {}", m);
+    } else {
+        println!("\nKernel Panic");
+    }
+
     cpu::wait_forever()
 }
diff --git a/nook_os/src/print.rs b/nook_os/src/print.rs
new file mode 100644
index 0000000..f0fb4b6
--- /dev/null
+++ b/nook_os/src/print.rs
@@ -0,0 +1,23 @@
+use core::fmt;
+use crate::bsp;
+
+pub fn _print(args: fmt::Arguments) {
+    pub use core::fmt::Write;
+    bsp::console::console().write_fmt(args).unwrap();
+}
+
+/// Print string
+
+#[macro_export]
+macro_rules! print {
+    ($($args:tt)*) => (crate::print::_print(format_args!($(args)*)))
+}
+
+/// Print string with a newline
+#[macro_export]
+macro_rules! println {
+    () => (crate::print::print!("\n"));
+    ($($args:tt)*) => ({
+        crate::print::_print(format_args_nl!($($args)*));
+    })
+}
-- 
2.7.4

